services:
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    command: redis-server
    restart: always
    networks:
      - appnet

  django_gunicorn:
    volumes:
      - static:/static
      - ./storage:/storage
    env_file:
      - storage/.env
    build:
      context: .
    ports:
      - 8000:8000
    networks:
      - appnet
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: gunicorn storage.wsgi:application --bind 0.0.0.0:8000

  nginx:
    build: ./nginx
    volumes:
      - ./storage/static:/storage/static
    ports:
      - 8080:8080
    depends_on:
      - django_gunicorn
    networks:
      - appnet

  celery:
    build:
      context: .
    volumes:
      - ./storage:/storage
    command: celery -A storage.notification:app worker -l INFO --pool eventlet
    restart: unless-stopped
    networks:
      - appnet
    depends_on:
      - django_gunicorn
      - nginx
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  flower:
    build:
      context: .
    ports:
      - 5555:5555
    command: celery -A storage.notification:app flower --port=5555
    networks:
      - appnet
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - django_gunicorn
      - nginx
      - celery
      - redis

  celery-beat:
    build:
      context: .
    command: celery -A storage beat -l INFO
    restart: always
    volumes:
      - ./storage:/storage
    networks:
      - appnet
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - django_gunicorn
      - nginx
      - celery
      - redis

networks:
  appnet:
    driver: bridge
    name: appnet

volumes:
  static:
  db_data:
